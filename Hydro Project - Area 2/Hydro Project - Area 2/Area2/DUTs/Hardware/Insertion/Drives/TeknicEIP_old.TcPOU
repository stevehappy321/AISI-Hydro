<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="TeknicEIP_old" Id="{668f31ab-c32e-4358-82c0-60575d137515}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TeknicEIP_old
VAR_INPUT CONSTANT
	bEnable : BOOL;
END_VAR
VAR_OUTPUT	
	home AT %I* : BOOL;
	outerLimit AT %I* : BOOL;
	innerLimit AT %I* : BOOL;
	done AT %I* : BOOL;	
	
	homeSet : BOOL;
	busy : BOOL;
	error : BOOL;
	
	position : REAL;
END_VAR
VAR
	enable AT %Q* : BOOL; //enable + pulses
	A AT %Q* : BOOL; //direction (F = inwards, T = outwards)
	B AT %Q* : BOOL; //home bit
	brakeRelease AT %Q* : BOOL;
	
	pulser : TON;	
	requestedPulses : INT;
	
	step : Homing;//(IDLE, HOME_UP, HOME_FINAL, DOWN, REDO_HOME, HOME_DONE);
END_VAR
VAR_STAT CONSTANT
	pulseWidth : TIME := T#25MS;
	unitsPerPulse : INT := 800; //800 Teknic units per revolution
	distancePerPulse : INT := 5; //5mm per revolution
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[//enable := bEnable;
IF NOT bEnable THEN
	RETURN;
END_IF

pulser(IN:= , PT:= pulseWidth, Q=> , ET=> ); //when timer is enabled, this toggles enable every <pulseWidth>

IF requestedPulses = 0 THEN
	busy := FALSE;
	
	enable := TRUE;
	pulser.IN := FALSE;
	RETURN;
END_IF

busy := TRUE;
pulser.IN := TRUE;

IF pulser.Q THEN
	pulser.IN := FALSE;
	enable := NOT enable;
	
	IF enable THEN //enable is TRUE after toggle
		requestedPulses := requestedPulses - 1;
		
		IF A THEN
			position := position + distancePerPulse;
		ELSE
			position := position - distancePerPulse;
		END_IF
	END_IF
END_IF

(*
IF pulseCounter >= pulseRequest THEN
	busy := FALSE;
	
	pulseRequest := 0;
	pulseCounter := 0;
	
	enable := TRUE;
	pulser.IN := FALSE;
	RETURN;
END_IF

busy := TRUE;
pulser.IN := TRUE;

IF pulser.Q THEN
	pulseCounter := pulseCounter + 1;
	enable := NOT enable;
	
	IF enable THEN //enable is TRUE after toggle
		IF A THEN
			position := position + distancePerPulse;
		ELSE
			position := position - distancePerPulse;
		END_IF
	END_IF
	pulser.IN := FALSE;
END_IF
*)]]></ST>
    </Implementation>
    <Method Name="homingSequence" Id="{de17b18a-5b16-4271-bf39-f9d8af0e059d}">
      <Declaration><![CDATA[METHOD homingSequence : BOOL]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE step OF
	Homing.IDLE:
		enable := FALSE;
		A := FALSE;
		B := FALSE;
		brakeRelease := TRUE;
		
		homeSet := FALSE;
		step := Homing.REDO;
		
	Homing.REDO: //let insertion drop to inner limit before homing
		enable := FALSE;
		A := FALSE;
		B := FALSE;
		brakeRelease := TRUE;
		
		IF NOT innerLimit THEN
			enable := TRUE;
			step := Homing.HOME_OUT;
		END_IF
	
	Homing.HOME_OUT:
		enable := TRUE;
		A := FALSE;
		B := TRUE;
		brakeRelease := TRUE;
		
		IF NOT home THEN
			B := FALSE;
			step := Homing.DONE;
		END_IF
		
	Homing.DONE:
		enable := TRUE;
		A := FALSE;
		B := FALSE;
		brakeRelease := TRUE;
		
		position := 0;
		homeSet := TRUE;
		homingSequence := TRUE;
		step := Homing.IDLE;
	
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="moveAbsolute" Id="{dc77def1-bef9-43df-afd0-8ca352bd4ae2}">
      <Declaration><![CDATA[METHOD moveAbsolute : BOOL
VAR_INPUT
	targetPos : LREAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[targetPos := target;
mode := TARGET;]]></ST>
      </Implementation>
    </Method>
    <Method Name="requestPulses" Id="{86f56a01-7fff-4f91-a0ab-1355c6f2262d}">
      <Declaration><![CDATA[METHOD PRIVATE requestPulses : BOOL
VAR_INPUT
	request : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (done OR requestedPulses = 0) AND request > 0 THEN
	requestedPulses := request;
	
	requestPulses := TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="reset" Id="{f33e4416-7cea-4ad8-9ff4-0e1a44f1ced7}">
      <Declaration><![CDATA[METHOD reset : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="traverse" Id="{76f62f65-e83e-4060-b65b-f4d25333162f}">
      <Declaration><![CDATA[METHOD traverse : BOOL
VAR_INPUT
	direction : MC_Direction;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF direction = MC_Negative_Direction THEN
	A := FALSE;
ELSIF direction = MC_Positive_Direction THEN
	A := TRUE;
END_IF


traverse := requestPulses(1);]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="TeknicEIP_old">
      <LineId Id="1001" Count="18" />
      <LineId Id="1064" Count="0" />
      <LineId Id="1021" Count="2" />
      <LineId Id="1061" Count="1" />
      <LineId Id="1024" Count="5" />
      <LineId Id="1031" Count="29" />
      <LineId Id="967" Count="0" />
    </LineIds>
    <LineIds Name="TeknicEIP_old.homingSequence">
      <LineId Id="98" Count="8" />
      <LineId Id="146" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="161" Count="2" />
      <LineId Id="160" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="155" Count="1" />
      <LineId Id="158" Count="0" />
      <LineId Id="147" Count="0" />
      <LineId Id="107" Count="1" />
      <LineId Id="167" Count="2" />
      <LineId Id="166" Count="0" />
      <LineId Id="111" Count="3" />
      <LineId Id="118" Count="0" />
      <LineId Id="127" Count="1" />
      <LineId Id="171" Count="2" />
      <LineId Id="170" Count="0" />
      <LineId Id="174" Count="1" />
      <LineId Id="129" Count="4" />
    </LineIds>
    <LineIds Name="TeknicEIP_old.moveAbsolute">
      <LineId Id="9" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="TeknicEIP_old.requestPulses">
      <LineId Id="81" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="141" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="131" Count="0" />
    </LineIds>
    <LineIds Name="TeknicEIP_old.reset">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="TeknicEIP_old.traverse">
      <LineId Id="14" Count="0" />
      <LineId Id="16" Count="3" />
      <LineId Id="15" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="10" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>