<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="DynamicQueue" Id="{e7bca9f7-e2c1-41e8-9e98-f6a9133845a3}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK DynamicQueue
VAR
	elements : FB_BA_DynamicArray := (uiEntrySize := SIZEOF(POINTER TO BYTE), uiMinExpCount := CONSTS.initArraySize); 
	elementSizes : FB_BA_DynamicArray := (uiEntrySize := SIZEOF(LINT), uiMinExpCount := CONSTS.initArraySize);
	length : INT := 0;
END_VAR
(*
this dynamic array stores pointers to dynamically generated objects
elements to be added are passed by value, then this function block allocates bytes
*)]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="clear" Id="{d720abaa-113a-463a-8cb1-0f64b55d1c80}">
      <Declaration><![CDATA[METHOD clear : BOOL
VAR
	i : INT;
	temp : POINTER TO BYTE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i:=0 TO length-1 BY 1 DO
	temp := get(index := i);
	__DELETE(temp);
END_FOR


elements.Reset();
elementSizes.Reset();
length := 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="contains" Id="{417b1983-67bb-416d-bd55-13a0fe5ca3b3}">
      <Declaration><![CDATA[METHOD contains : BOOL
VAR_INPUT
	value : ANY;
END_VAR
VAR_OUTPUT
	atIndex : INT;
END_VAR
VAR
	temp : POINTER TO BYTE;
	tempSize : LINT;
	i : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF length = 0 THEN
	contains := FALSE;
	RETURN;
END_IF

FOR i:=0 TO length-1 BY 1 DO
	temp := get(index := i, getSize => tempSize);
	
	IF 
		tempSize = value.diSize AND //same size
		MEMCMP(get(i), value.pValue, TO_UDINT(value.diSize)) = 0 //same data
	THEN
		contains := TRUE;
		atIndex := i;
		RETURN;
	END_IF
	
END_FOR
contains := FALSE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="get" Id="{0b2fa2c1-3d44-4975-9ce0-c9473517d753}">
      <Declaration><![CDATA[METHOD get : POINTER TO BYTE
VAR_INPUT
	index : INT;
END_VAR
VAR_OUTPUT
	getSize : LINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF length = 0 OR index < 0 OR index >= length THEN
	get := 0;
	getSize := 0;
ELSE
	elements.GetEntry(diIndex := index, pResultEntry := ADR(get));
	elementSizes.GetEntry(diIndex := index, pResultEntry := ADR(getSize));
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="isEmpty" Id="{31d66a9c-50a3-4fcd-850e-6bdefaaf28fd}">
      <Declaration><![CDATA[METHOD isEmpty : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[isEmpty := length = 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="poll" Id="{1f7ff33a-a91e-4842-a8da-4414a3544d77}">
      <Declaration><![CDATA[METHOD poll : POINTER TO BYTE
VAR_OUTPUT
	getSize : LINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[poll := get(index := 0, getSize => getSize);

IF length > 0 THEN
	elements.RemoveEntry(diIndex := 0);
	elementSizes.RemoveEntry(diIndex := 0);
	
	length := length - 1;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="push" Id="{dce80655-efb8-426b-a022-f478e223b154}">
      <Declaration><![CDATA[METHOD push : BOOL
VAR_INPUT
	value : ANY;
END_VAR
VAR
	temp : POINTER TO BYTE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[temp := __NEW(BYTE, TO_UDINT(value.diSize));
MEMCPY(temp, value.pValue, TO_UDINT(value.diSize));

elements.AddEntryPtr(pEntry := temp);
elementSizes.AddEntry(pEntry := ADR(value.diSize));

length := length + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="set" Id="{3f3298cf-ea2c-441a-945c-342cf9c7de98}">
      <Declaration><![CDATA[METHOD set : BOOL
VAR_INPUT
	i : INT;
	value : ANY;
END_VAR
VAR
	temp : POINTER TO BYTE;
	tempSize : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF length = 0 THEN
	RETURN;
END_IF

IF i >= 0 AND i < length THEN
	temp := get(i);
	__DELETE(temp);
	
	tempSize := TO_UDINT(value.diSize);
	temp := __NEW(BYTE, tempSize);
	MEMCPY(temp, value.pValue, tempSize);

	elements.SetEntryPtr(i, ADR(temp));
	elementSizes.SetEntry(i, ADR(tempSize)); 
	set := TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="size" Id="{0d97d89b-4bee-4ed5-bc09-af7514b6de18}">
      <Declaration><![CDATA[METHOD size : INT]]></Declaration>
      <Implementation>
        <ST><![CDATA[size := length;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="DynamicQueue">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="DynamicQueue.clear">
      <LineId Id="22" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="23" Count="5" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="DynamicQueue.contains">
      <LineId Id="21" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="33" Count="0" />
    </LineIds>
    <LineIds Name="DynamicQueue.get">
      <LineId Id="10" Count="1" />
      <LineId Id="21" Count="0" />
      <LineId Id="12" Count="1" />
      <LineId Id="22" Count="0" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="DynamicQueue.isEmpty">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="DynamicQueue.poll">
      <LineId Id="67" Count="3" />
      <LineId Id="73" Count="1" />
      <LineId Id="71" Count="1" />
      <LineId Id="53" Count="0" />
    </LineIds>
    <LineIds Name="DynamicQueue.push">
      <LineId Id="47" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="42" Count="1" />
      <LineId Id="17" Count="0" />
    </LineIds>
    <LineIds Name="DynamicQueue.set">
      <LineId Id="22" Count="3" />
      <LineId Id="11" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="28" Count="1" />
      <LineId Id="35" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="DynamicQueue.size">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>