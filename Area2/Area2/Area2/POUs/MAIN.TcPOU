<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="MAIN" Id="{f8ea2e52-8cdd-4c5a-a5f9-4c8d8a3c6a2c}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR_OUTPUT //globally readable, but only modifiable by MAIN
	outputBuffer : ARRAY[Surface.LEFT..Surface.RIGHT] OF Bundle;
	outputBufferPass, outputBufferFail : Bundle;
	numOutputBundles : USINT := 0;
	
	bundleIn : Bundle;
	bundleOut : Bundle;
	
	start : BOOL;
	
	ready : BOOL;
	busy : BOOL;
	done : BOOL;
	error : BOOL;
	backlog : BOOL;
	
	stop : BOOL;
	execute : BOOL;
	hold : BOOL;
	reset : BOOL;
	
	localTime : TIMESTRUCT;
	
	pmlModeString : STRING;
	pmlStateString : STRING;
END_VAR
VAR
	clearPassBuffer, clearFailBuffer AT %I* : BOOL;
	receiverStruct : AdsData;
	
	//ETA is not strictly required, area will process bundle even if it is not in ETA arrays
	expectedBundles : ARRAY[0..GVL.maxQueue] OF STRING; //bundles expected to arrive
	expectedArrivals : ARRAY[0..GVL.maxQueue] OF TIMESTRUCT; //bundles expected to arrive
	numEtaBundles : INT;
	
	//parallel arrays - bundle, bypass
	numBundles : INT;
	bundlesQueue : ARRAY[0..GVL.maxQueue] OF Bundle;
	bundlesBypass : ARRAY[0..GVL.maxQueue] OF BOOL;
END_VAR
VAR
	//spacerRecollector : PackagerFreeAsync;
	//paperSection : PaperEx;
	//cardboardCornerGuardSection : CardboardCornerGuardEx;
	//chipboardSection : ChipboardEx;
	woodBunkSection : WoodBunkEx;
	//outputSection : AreaOutputEx;	
END_VAR
VAR
	fbLocalSystemTime : FB_LocalSystemTime;
	dbLogger : SqlDatabaseAccessor;
	conveyorController : ConveyorControlUnit;
	
	pmlState : E_PMLState;
	pmlCommand : E_PMLCommand;
	pmlStateMachine : PML_StateMachine;
	
	pmlModeRequest : E_PMLCustomUnitMode := ePMLCustomUnitMode_Production;
	pmlMode : E_PMLCustomUnitMode;
	pmlModeManager : PML_UnitModeManager;
END_VAR
VAR //these variables are only tracked for HMI
	sectionsBusy : ARRAY[0..SectionEnum.size] OF BOOL;
	sectionsIterator : ARRAY[0..SectionEnum.size] OF INT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*
ready := paperSection.ready; //if A2 is not ready, dispatch controller must block operator from sending bundles here
busy := paperSection.busy OR cardboardCornerGuardSection.busy OR chipboardSection.busy OR woodBunkSection.busy OR outputSection.busy;
done := outputSection.done;
backlog := numBundlesQueue > 5;
*)

CallHardware(); //start program with CallHardware()
SetupHardware(); //set bEnables, setup material holder slots, etc

initialize();

fillBundlesQueue();

SizeCheck();
getLocalTime();

AdsClient( //PLC-PLC comms
	ServerNetId:= , 
	ServerPort:= , 
	bBusy=> , 
	err=> , 
	errid=> , 
	localPrgName=> , 
	localNetId=> , 
	localPort=> , 
	socketReady=> , 
	remoteAccessPrefix=> );
	
TcpServer1Vision( //PLC-Vision comms
	ServerNetId:= , 
	ServerAdr:= , 
	ServerPort:= , 
	busy=> , 
	error=> , 
	errorId=> , 
	bytesReceived=> , 
	connected=> , 
	receiveStruct=> );
	
runPML();

IF AdsClient.fetchData(receiverStruct) THEN
	interpretTransmission(receiverStruct);
END_IF


IF ready AND BundleIsValid(bundleIn) THEN
	receive();
END_IF


IF clearPassBuffer OR clearFailBuffer THEN
	transfer();
	shiftBundles();
END_IF

dbLogger();

conveyorController(conveyors := conveyorsArr);
CallHardware(); //start program with CallHardware()]]></ST>
    </Implementation>
    <Folder Name="PML Conditions" Id="{c04cfa90-34d0-4dce-a54d-25d4cc1b429e}" />
    <Folder Name="PML States" Id="{6ef5f588-dba8-43b6-aecd-30cae96b064d}" />
    <Folder Name="Process Modes" Id="{8d1d624d-f207-4b80-ae71-4f41b10197eb}" />
    <Folder Name="Setup" Id="{766689c6-4b05-4d8b-a8a4-3bf5c2750aa3}" />
    <Method Name="fillBundlesQueue" Id="{73fc04c3-3b20-4b90-b668-e45a325d9c2c}" FolderPath="Setup\">
      <Declaration><![CDATA[METHOD fillBundlesQueue : BOOL
VAR
	i : INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT start THEN //for HMI testing only, remove for production
	FOR i:=0 TO GVL.maxQueue BY 1 DO
		bundlesQueue[i].id := TO_STRING(i);
	END_FOR
	
	start := TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="getLocalTime" Id="{b9dfd14b-062f-4ab4-b051-cd1816451bba}">
      <Declaration><![CDATA[METHOD PRIVATE getLocalTime : BOOL]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbLocalSystemTime(
	sNetID:= '', 
	bEnable:= TRUE, 
	dwCycle:= , 
	dwOpt:= , 
	tTimeout:= , 
	bValid=> , 
	systemTime=> localTime, 
	tzID=> );
	
getLocalTime := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="initialize" Id="{1af4c629-041d-43ca-9e16-2266f17c58c8}" FolderPath="Setup\">
      <Declaration><![CDATA[METHOD PRIVATE initialize : BOOL]]></Declaration>
      <Implementation>
        <ST><![CDATA[//paperSection.connectTo(ADR(cardboardCornerGuardSection));
//cardboardCornerGuardSection.connectTo(ADR(chipboardSection));
//chipboardSection.connectTo(ADR(woodBunkSection));
woodBunkSection.connectTo(0); //(ADR(outputSection));
//connecting to 0 means no next section

//paperSection.sectionID := SectionEnum.PAPER;
//cardboardCornerGuardSection.sectionID := SectionEnum.CARDBOARD_CORNERGUARD;
//chipboardSection.sectionID := SectionEnum.CHIPBOARD;
woodBunkSection.sectionID := SectionEnum.WOOD_BUNK;
//outputSection.sectionID := SectionEnum.OUTPUT;

(*
	paperSection.pNextSection := ADR(cardboardCornerGuardSection);
	cardboardCornerGuardSection.accessNextSection := ADR(chipboardSection);
	chipboardSection.accessNextSection := ADR(woodBunkSection);
	woodBunkSection.accessNextSection := ADR(outputSection);
	outputSection.accessNextSection := 0;
*)

initialize := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="interpretTransmission" Id="{04aa253b-ab0d-41b0-b6b2-443fd8efedd5}">
      <Declaration><![CDATA[METHOD PRIVATE interpretTransmission : BOOL
VAR_INPUT
	data : REFERENCE TO AdsData;
END_VAR
VAR
	i : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE data.description OF
	EventsEnum.BUNDLE_IN:
		MEMCPY(ADR(bundleIn), ADR(data.binaryData), SIZEOF(bundleIn));
			
	EventsEnum.BUNDLE_ETA:
		MEMCPY(ADR(expectedBundles[numEtaBundles]), ADR(data.binaryData), SIZEOF(expectedBundles[numEtaBundles]));
		expectedArrivals[numEtaBundles] := data.timestamp;
		
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="maintenance" Id="{0fc159f6-b7a4-4008-822a-e6f2dd60b8f1}">
      <Declaration><![CDATA[METHOD maintenance : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="process" Id="{f9da02b9-c065-4582-840f-d291dad1e576}" FolderPath="Process Modes\">
      <Declaration><![CDATA[METHOD PRIVATE process : BOOL
(*
full parallel processsing
all sections may operate concurrently on any bundle
*)]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*
paperSection(
	enable:= run[SectionEnum.PAPER], 
	bundlesQueue:= bundlesQueue, 
	bundlesBypass:= bundlesBypass,
	bundleOut=> , 
	bypass=> , 
	ready=> , 
	busy=> sectionsBusy[SectionEnum.PAPER], 
	done=> , 
	error=> , 
	backlog=> ,
	iBundle=> sectionsIterator[SectionEnum.PAPER],
	iPair=> );
	
cardboardCornerGuardSection(
	enable:= run[SectionEnum.CARDBOARD_CORNERGUARD],
	bundlesQueue:= bundlesQueue, 
	bundlesBypass:= bundlesBypass,
	bundleOut=> ,
	bypass=> , 
	ready=> , 
	busy=> sectionsBusy[SectionEnum.CARDBOARD_CORNERGUARD], 
	done=> , 
	error=> , 
	backlog=> ,
	iBundle=> sectionsIterator[SectionEnum.CARDBOARD_CORNERGUARD],
	iPair=> );

chipboardSection(
	enable:= run[SectionEnum.CHIPBOARD],
	bundlesQueue:= bundlesQueue, 
	bundlesBypass:= bundlesBypass, 
	bundleOut=> ,
	bypass=> , 
	ready=> , 
	busy=> sectionsBusy[SectionEnum.CHIPBOARD], 
	done=> , 
	error=> , 
	backlog=> ,
	iBundle=> sectionsIterator[SectionEnum.CHIPBOARD],
	iPair=> );
*)

(*
woodBunkSection(
	enable:= run[SectionEnum.WOOD_BUNK],
	bundlesQueue:= bundlesQueue, 
	bundlesBypass:= bundlesBypass, 
	bundleOut=> ,
	bypass=> , 
	ready=> , 
	busy=> sectionsBusy[SectionEnum.WOOD_BUNK], 
	done=> , 
	error=> , 
	backlog=> ,
	iBundle=> sectionsIterator[SectionEnum.WOOD_BUNK],
	iPair=> );
*)
(*
outputSection(
	enable:= run[SectionEnum.OUTPUT],
	bundlesQueue:= bundlesQueue, 
	bundlesBypass:= bundlesBypass,
	outputBuffer:= outputBuffer,
	bundleOut=> , 
	bypass=> , 
	ready=> , 
	busy=> sectionsBusy[SectionEnum.OUTPUT],
	done=> , 
	error=> , 
	backlog=> ,
	iBundle=> sectionsIterator[SectionEnum.OUTPUT],
	iPair=> );
*)]]></ST>
      </Implementation>
    </Method>
    <Method Name="processLLD" Id="{042e9a05-7085-4896-a772-b3d42ff1357c}" FolderPath="Process Modes\">
      <Declaration><![CDATA[METHOD PRIVATE processLLD : BOOL]]></Declaration>
      <Implementation>
        <NWL>
          <XmlArchive>
            <Data>
              <o xml:space="preserve" t="NWLImplementationObject">
                <v n="NetworkListComment">""</v>
                <v n="DefaultViewMode">"Ld"</v>
                <l2 n="NetworkList" cet="Network">
                  <o>
                    <v n="ILActive">false</v>
                    <v n="FBDValid">false</v>
                    <v n="ILValid">false</v>
                    <l2 n="ILLines" />
                    <v n="Comment">""</v>
                    <v n="Title">""</v>
                    <v n="Label">""</v>
                    <v n="OutCommented">false</v>
                    <l2 n="NetworkItems" cet="BoxTreeBox">
                      <o>
                        <v n="BoxType">"WoodBunkEx"</v>
                        <o n="Instance" t="Operand">
                          <v n="Operand">"woodBunkSection"</v>
                          <v n="Type">"WoodBunkEx"</v>
                          <v n="Comment">""</v>
                          <v n="SymbolComment">""</v>
                          <v n="Address">""</v>
                          <o n="Flags" t="Flags">
                            <v n="Flags">0</v>
                            <v n="Fixed">false</v>
                            <v n="Extensible">false</v>
                          </o>
                          <v n="LValue">false</v>
                          <v n="Boolean">false</v>
                          <v n="IsInstance">true</v>
                          <v n="Id">80L</v>
                        </o>
                        <o n="OutputItems" t="OutputItemList">
                          <l2 n="OutputItems" cet="Operand">
                            <n />
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"Bundle"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">8L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">9L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"STRING"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">12L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"STRING"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">13L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">14L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">15L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">16L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">17L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">10L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">11L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">18L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">19L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">20L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"INT (0..GVL.maxQueue)"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">21L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"INT (0..GVL.maxPairs)"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">22L</v>
                            </o>
                          </l2>
                        </o>
                        <o n="Flags" t="Flags">
                          <v n="Flags">0</v>
                          <v n="Fixed">true</v>
                          <v n="Extensible">false</v>
                        </o>
                        <n n="InputFlags" />
                        <l2 n="InputItems" cet="BoxTreeOperand">
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"TRUE"</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">34L</v>
                            </o>
                            <v n="Id">33L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">36L</v>
                            </o>
                            <v n="Id">35L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"SectionEnum.WOOD_BUNK"</v>
                              <v n="Type">"SECTIONENUM"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">38L</v>
                            </o>
                            <v n="Id">37L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"18"</v>
                              <v n="Type">"INT"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">40L</v>
                            </o>
                            <v n="Id">39L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"21"</v>
                              <v n="Type">"INT"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">42L</v>
                            </o>
                            <v n="Id">41L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"bundlesQueue"</v>
                              <v n="Type">"ARRAY [0..GVL.maxQueue] OF Bundle"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">44L</v>
                            </o>
                            <v n="Id">43L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"bundlesBypass"</v>
                              <v n="Type">"ARRAY [0..GVL.maxQueue] OF BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">46L</v>
                            </o>
                            <v n="Id">45L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"robot1"</v>
                              <v n="Type">"RobotA21"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">48L</v>
                            </o>
                            <v n="Id">47L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"robot2"</v>
                              <v n="Type">"RobotA21"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">50L</v>
                            </o>
                            <v n="Id">49L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"toolStorageA21Left"</v>
                              <v n="Type">"A21ToolStorage"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">52L</v>
                            </o>
                            <v n="Id">51L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"toolStorageA21Right"</v>
                              <v n="Type">"A21ToolStorage"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">54L</v>
                            </o>
                            <v n="Id">53L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"stagingTableLeft"</v>
                              <v n="Type">"StagingTable"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">56L</v>
                            </o>
                            <v n="Id">55L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"stagingTableRight"</v>
                              <v n="Type">"StagingTable"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">58L</v>
                            </o>
                            <v n="Id">57L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"magazineA21Left"</v>
                              <v n="Type">"SkidMagazine"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">60L</v>
                            </o>
                            <v n="Id">59L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"magazineA21Right"</v>
                              <v n="Type">"SkidMagazine"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">62L</v>
                            </o>
                            <v n="Id">61L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"strapperA21"</v>
                              <v n="Type">"StrapMachine"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">64L</v>
                            </o>
                            <v n="Id">63L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"insertionA21Left"</v>
                              <v n="Type">"Insertion"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">66L</v>
                            </o>
                            <v n="Id">65L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"insertionA21Right"</v>
                              <v n="Type">"Insertion"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">68L</v>
                            </o>
                            <v n="Id">67L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"pistonA21Bottom"</v>
                              <v n="Type">"SimplePiston"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">70L</v>
                            </o>
                            <v n="Id">69L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"suctionA21Top"</v>
                              <v n="Type">"ARRAY [1..3] OF SuctionPad"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">72L</v>
                            </o>
                            <v n="Id">71L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"suctionA21Left"</v>
                              <v n="Type">"ARRAY [1..4] OF SuctionPad"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">74L</v>
                            </o>
                            <v n="Id">73L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"suctionA21Right"</v>
                              <v n="Type">"ARRAY [1..4] OF SuctionPad"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">76L</v>
                            </o>
                            <v n="Id">75L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"suctionA21Bottom"</v>
                              <v n="Type">"ARRAY [1..2] OF SuctionPad"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">78L</v>
                            </o>
                            <v n="Id">77L</v>
                          </o>
                        </l2>
                        <o n="InputParam" t="ParamList">
                          <l2 n="Names" cet="String">
                            <v>EN</v>
                            <v>enable</v>
                            <v>sectionID</v>
                            <v>firstConveyor</v>
                            <v>lastConveyor</v>
                            <v>bundlesQueue</v>
                            <v>bundlesBypass</v>
                            <v>robotLeft</v>
                            <v>robotRight</v>
                            <v>toolStorageLeft</v>
                            <v>toolStorageRight</v>
                            <v>stagingTableLeft</v>
                            <v>stagingTableRight</v>
                            <v>magazineLeft</v>
                            <v>magazineRight</v>
                            <v>strapper</v>
                            <v>insertionLeft</v>
                            <v>insertionRight</v>
                            <v>pistonBottom</v>
                            <v>suctionTop</v>
                            <v>suctionLeft</v>
                            <v>suctionRight</v>
                            <v>suctionBottom</v>
                          </l2>
                          <l2 n="Types" cet="String">
                            <v>BOOL</v>
                            <v>BOOL</v>
                            <v>SectionEnum</v>
                            <v>INT</v>
                            <v>INT</v>
                            <v>POINTER TO Bundle</v>
                            <v>POINTER TO BOOL</v>
                            <v>RobotA21[REF]</v>
                            <v>RobotA21[REF]</v>
                            <v>A21ToolStorage[REF]</v>
                            <v>A21ToolStorage[REF]</v>
                            <v>StagingTable[REF]</v>
                            <v>StagingTable[REF]</v>
                            <v>SkidMagazine[REF]</v>
                            <v>SkidMagazine[REF]</v>
                            <v>StrapMachine[REF]</v>
                            <v>Insertion[REF]</v>
                            <v>Insertion[REF]</v>
                            <v>SimplePiston[REF]</v>
                            <v>POINTER TO SuctionPad</v>
                            <v>POINTER TO SuctionPad</v>
                            <v>POINTER TO SuctionPad</v>
                            <v>POINTER TO SuctionPad</v>
                          </l2>
                        </o>
                        <o n="OutputParam" t="ParamList">
                          <l2 n="Names" cet="String">
                            <v>ENO</v>
                            <v>bundleOut</v>
                            <v>bypass</v>
                            <v>pmlModeString</v>
                            <v>pmlStateString</v>
                            <v>stop</v>
                            <v>execute</v>
                            <v>hold</v>
                            <v>reset</v>
                            <v>ready</v>
                            <v>busy</v>
                            <v>done</v>
                            <v>error</v>
                            <v>backlog</v>
                            <v>iBundle</v>
                            <v>iPair</v>
                          </l2>
                          <l2 n="Types" cet="String">
                            <v>BOOL</v>
                            <v>Bundle</v>
                            <v>BOOL</v>
                            <v>STRING</v>
                            <v>STRING</v>
                            <v>BOOL</v>
                            <v>BOOL</v>
                            <v>BOOL</v>
                            <v>BOOL</v>
                            <v>BOOL</v>
                            <v>BOOL</v>
                            <v>BOOL</v>
                            <v>BOOL</v>
                            <v>BOOL</v>
                            <v>INT (0..GVL.maxQueue)</v>
                            <v>INT (0..GVL.maxPairs)</v>
                          </l2>
                        </o>
                        <v n="CallType" t="Operator">FunctionBlock</v>
                        <v n="EN">true</v>
                        <v n="ENO">true</v>
                        <n n="STSnippet" />
                        <v n="ContainsExtensibleInputs">false</v>
                        <v n="ProvidesSTSnippet">false</v>
                        <v n="Id">81L</v>
                      </o>
                    </l2>
                    <l2 n="Connectors" />
                    <v n="Id">5L</v>
                  </o>
                </l2>
                <v n="BranchCounter">0</v>
                <v n="ValidIds">true</v>
              </o>
            </Data>
            <TypeList>
              <Type n="Boolean">System.Boolean</Type>
              <Type n="BoxTreeBox">{acfc6f68-8e3a-4af5-bf81-3dd512095a46}</Type>
              <Type n="BoxTreeOperand">{9de7f100-1b87-424c-a62e-45b0cfc85ed2}</Type>
              <Type n="Flags">{668066f2-6069-46b3-8962-8db8d13d7db2}</Type>
              <Type n="Int32">System.Int32</Type>
              <Type n="Int64">System.Int64</Type>
              <Type n="Network">{d9a99d73-b633-47db-b876-a752acb25871}</Type>
              <Type n="NWLImplementationObject">{25e509de-33d4-4447-93f8-c9e4ea381c8b}</Type>
              <Type n="Operand">{c9b2f165-48a2-4a45-8326-3952d8a3d708}</Type>
              <Type n="Operator">{bffb3c53-f105-4e85-aba2-e30df579d75f}</Type>
              <Type n="OutputItemList">{f40d3e09-c02c-4522-a88c-dac23558cfc4}</Type>
              <Type n="ParamList">{71496971-9e0c-4677-a832-b9583b571130}</Type>
              <Type n="String">System.String</Type>
            </TypeList>
          </XmlArchive>
        </NWL>
      </Implementation>
    </Method>
    <Method Name="ps_AbortCondition" Id="{2bb22b37-bb31-4cf8-9360-ad8974e4345a}" FolderPath="PML Conditions\">
      <Declaration><![CDATA[METHOD PRIVATE ps_AbortCondition : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Aborted" Id="{8b7e8913-d6a1-4d11-8ef4-5de3678c0038}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Aborted : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Aborting" Id="{2cfb75cc-c590-4cea-9c9e-baef234b3390}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Aborting : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Clearing" Id="{2e0869f6-c4a9-4781-8ad2-74da1ae357b5}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Clearing : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Complete" Id="{b669e02a-682b-4740-906b-0def158a3c63}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Complete : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Completing" Id="{d62eb91d-4af1-4f38-ab45-c3b8a61c00fe}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Completing : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Execute" Id="{1599d25a-dab9-4ec4-92fd-68ba4e793876}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Execute : BOOL
VAR_INPUT
END_VAR
VAR_OUTPUT
	error : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE pmlMode OF
	0: //invalid mode
	ePMLCustomUnitMode_Production:		ps_Execute := process();
	ePMLCustomUnitMode_Maintenance:		maintenance();
	ePMLCustomUnitMode_Manual:			//
	ePMLCustomUnitMode_SemiAuto:		ps_Execute := process(); //manually step bundle into area - sections may be auto while area is semi-auto
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Held" Id="{95c54fec-4967-44f4-be8f-1e853d267e68}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Held : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_HoldCondition" Id="{ede1d647-a96e-40da-9b59-0807c117e213}" FolderPath="PML Conditions\">
      <Declaration><![CDATA[METHOD PRIVATE ps_HoldCondition : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Holding" Id="{c19fae67-2974-4ceb-8f46-951138e6d029}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Holding : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Idle" Id="{d98cd4ab-14fc-4d54-b00b-761967e4ce59}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Idle : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*
IF BundleIsValid(currentBundle) THEN
	ps_Idle := TRUE;
	done := FALSE;
END_IF
*)

ps_Idle := TRUE; (*start section input*)]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Resetting" Id="{800fa30c-d995-43ee-a200-3b63842e0a79}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Resetting : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Starting" Id="{63620e6e-9309-4b45-8ae4-a18a69032f6f}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Starting : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_StopCondition" Id="{3958b83a-de5c-49c7-92a1-84b37d19df0a}" FolderPath="PML Conditions\">
      <Declaration><![CDATA[METHOD PRIVATE ps_StopCondition : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Stopped" Id="{842f7be6-f686-4ed8-9cf9-1ceced765cfd}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Stopped : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Stopping" Id="{e0fa46b1-b44a-4e23-a32e-d1b02ace1ef6}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Stopping : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_SuspendCondition" Id="{ac03eab2-8477-4493-9499-38a84b2dca7e}" FolderPath="PML Conditions\">
      <Declaration><![CDATA[METHOD PRIVATE ps_SuspendCondition : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Suspended" Id="{977bb7ef-1ea7-4419-8df9-c453c72a4fd4}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Suspended : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Suspending" Id="{5beb683b-6fd3-4fc2-9a12-97f55383c8c4}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Suspending : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Unholding" Id="{290593bb-af9d-4c36-8150-3909fafedce7}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Unholding : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ps_Unsuspending" Id="{cb22f287-33db-44c9-9aac-845a4a32160a}" FolderPath="PML States\">
      <Declaration><![CDATA[METHOD PRIVATE ps_Unsuspending : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="receive" Id="{2de20b6b-9727-4ca1-a75e-22c752a3c085}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD PRIVATE receive : BOOL
VAR
	i : INT;
	shiftIndex : INT := -1;
	invalidBundle : Bundle;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i:=0 TO GVL.maxQueue BY 1 DO //find the bundle in the ETA queue
	IF expectedBundles[i] = bundleIn.id THEN
		shiftIndex := i;
		EXIT;
	END_IF
END_FOR

IF shiftIndex > -1 THEN //if the bundle is found in the ETA queue, shift everything down
	MEMMOVE(
		ADR(expectedBundles[shiftIndex]), 
		ADR(expectedBundles[shiftIndex + 1]), 
		SIZEOF(STRING) * TO_UINT(GVL.maxQueue - shiftIndex));
		
	MEMMOVE(
		ADR(expectedArrivals[shiftIndex]), 
		ADR(expectedArrivals[shiftIndex + 1]), 
		SIZEOF(TIMESTRUCT) * TO_UINT(GVL.maxQueue - shiftIndex) );
		
	numEtaBundles := numEtaBundles - 1;
END_IF

FOR i:=0 TO GVL.maxQueue BY 1 DO
	IF BundleIsValid(bundlesQueue[i]) AND NOT bundlesBypass[i] THEN
		bundlesQueue[i] := bundleIn;
		bundlesBypass[i] := FALSE;
		
		receive := TRUE;
		RETURN;
	END_IF
END_FOR

IF NOT receive THEN
	error := TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="runPML" Id="{70af2742-8e75-45b6-8123-d51f2e8f6038}">
      <Declaration><![CDATA[METHOD PRIVATE runPML : BOOL
(*
PackML
	state machine for packaging applications - see Tc3_PackML_V2 library on InfoSys
	
	final states - wait for an input or condition and command to new state
	intermediate states - complete a task and call pmlStateMachine.M_StateComplete() to advance to next state
	
the following states currently use the same logic (albeit in different methods), implementation may change later
	ps_Stopping() and ps_Aborting()
	ps_Resetting() and ps_Clearing()
	
STOP - controlled stop **with intent to shutdown or vacate for extended time** induced by operator/HMI - otherwise use HOLD
ABORT - emergency stop due to machine errors


HOLD - minor local issues
SUSPEND - external issues

EXECUTE - major control logic
	different modes may require different tasks
	create methods as required for different modes, then call the correct method in ps_Completing()
	can be commanded to STOP, ABORT, HOLD, or SUSPEND at any point
COMPLETING - process complete, move product out of system and finish transition to COMPLETED

the implementation below can be copied to all POUs that use a PackML state machine
the individual ps_< > methods need to be implemented for the specific application
*)]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF ps_AbortCondition() THEN //abort condition
	pmlCommand := ePMLCommand_Abort;
ELSIF ps_StopCondition() THEN //stop condition
	pmlCommand := ePMLCommand_Stop;
END_IF

CASE pmlState OF
	0 (*ePMLState_Undefined*): //default state on startup
		pmlCommand := ePMLCommand_Stop;
		
	ePMLState_Stopping:
		IF ps_Stopping() THEN
			pmlStateMachine.M_StateComplete();
		END_IF
		
	ePMLState_Stopped:
		IF ps_Stopped() THEN
			pmlCommand := ePMLCommand_Reset;
		END_IF
	
    ePMLState_Resetting:
		IF ps_Resetting() THEN
			pmlStateMachine.M_StateComplete();
		END_IF
		
	ePMLState_Idle:
		IF ps_Idle() THEN
			pmlCommand := ePMLCommand_Start;
		END_IF		
	
	ePMLState_Starting:
		IF ps_Starting() THEN
			pmlStateMachine.M_StateComplete();
		END_IF
	
	ePMLState_Execute: //check the conditions in order of their priority, currently HOLD has the highest priority
		IF ps_HoldCondition() THEN
			pmlCommand := ePMLCommand_Hold;
			
		ELSIF ps_SuspendCondition() THEN
			pmlCommand := ePMLCommand_Suspend;			
		
		ELSIF ps_Execute(error => error) THEN //ps_Execute.error => THIS^.error
			pmlStateMachine.M_StateComplete();
			pmlCommand := ePMLCommand_Complete;
		END_IF
		
	ePMLState_Completing:
		IF ps_Completing() THEN
			pmlStateMachine.M_StateComplete();
		END_IF
	
	ePMLState_Complete:
		IF ps_Complete() THEN
			pmlCommand := ePMLCommand_Reset;
		END_IF
	
	ePMLState_Holding:
		IF ps_Holding() THEN
			pmlStateMachine.M_StateComplete();
		END_IF
	
	ePMLState_Held:
		IF NOT hold THEN
			pmlCommand := ePMLCommand_Unhold;
		END_IF
	
	ePMLState_Unholding:
		IF ps_Unholding() THEN
			pmlStateMachine.M_StateComplete(); //release all pause commands and IO
		END_IF
		
	ePMLState_Suspending: //based on next section conditions
		IF ps_Suspending() THEN
			pmlStateMachine.M_StateComplete();
		END_IF
		
	ePMLState_Suspended: //based on next section conditions
		IF ps_Suspended() THEN
			pmlCommand := ePMLCommand_Unsuspend;
		END_IF
	
	ePMLState_Unsuspending: //based on next section conditions
		IF ps_Unsuspending() THEN
			pmlStateMachine.M_StateComplete();
		END_IF
	
	ePMLState_Aborting:
		IF ps_Aborting() THEN
			pmlStateMachine.M_StateComplete();
		END_IF
	
	ePMLState_Aborted:
		IF ps_Aborted() THEN
			pmlCommand := ePMLCommand_Clear;
		END_IF
	
	ePMLState_Clearing:
		IF ps_Clearing() THEN
			pmlStateMachine.M_StateComplete();
		END_IF
	
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="shiftBundles" Id="{5473c570-b523-4be9-bf64-c8f58c1af44e}">
      <Declaration><![CDATA[METHOD shiftBundles : BOOL
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//shift down parallel arrays
MEMMOVE(ADR(bundlesQueue[0]), ADR(bundlesQueue[1]), SIZEOF(Bundle) * TO_UINT(GVL.maxQueue));
MEMMOVE(ADR(bundlesBypass[0]), ADR(bundlesBypass[1]), SIZEOF(BOOL) * TO_UINT(GVL.maxQueue));

//decrement each section's iterator to realign with their correct bundle
//paperSection.shiftIterator();
//cardboardCornerGuardSection.shiftIterator();
//chipboardSection.shiftIterator();
woodBunkSection.shiftIterator();
//outputSection.shiftIterator();]]></ST>
      </Implementation>
    </Method>
    <Method Name="transfer" Id="{a55e1076-0c29-4969-952a-05c194ea9e2d}">
      <Declaration><![CDATA[METHOD PRIVATE transfer : BOOL
VAR
	i : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//send TCP/ADS transmission back to Dispatch once bundle is removed from the plant

IF clearPassBuffer THEN
	dbLogger.queueEvent(event:= EventsEnum.BUNDLE_OUT); //modify to include bundle ID
	//outputBufferPass := GVL.nullBundle;
	MEMSET(ADR(outputBufferPass), 0, SIZEOF(outputBufferPass));
END_IF

IF clearFailBuffer THEN
	dbLogger.queueEvent(event:= EventsEnum.BUNDLE_OUT); //modify to include bundle ID
	//outputBufferFail := GVL.nullBundle;
	MEMSET(ADR(outputBufferFail), 0, SIZEOF(outputBufferFail));
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="MAIN">
      <LineId Id="4220" Count="4" />
      <LineId Id="4218" Count="0" />
      <LineId Id="4227" Count="1" />
      <LineId Id="4235" Count="0" />
      <LineId Id="4238" Count="0" />
      <LineId Id="4237" Count="0" />
      <LineId Id="4219" Count="0" />
      <LineId Id="4117" Count="26" />
      <LineId Id="4242" Count="1" />
      <LineId Id="4152" Count="8" />
      <LineId Id="4162" Count="5" />
      <LineId Id="4175" Count="0" />
      <LineId Id="2488" Count="0" />
      <LineId Id="4241" Count="0" />
      <LineId Id="4230" Count="0" />
      <LineId Id="4229" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.fillBundlesQueue">
      <LineId Id="7" Count="6" />
    </LineIds>
    <LineIds Name="MAIN.getLocalTime">
      <LineId Id="6" Count="7" />
      <LineId Id="5" Count="0" />
      <LineId Id="14" Count="1" />
    </LineIds>
    <LineIds Name="MAIN.initialize">
      <LineId Id="14" Count="2" />
      <LineId Id="5" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="84" Count="3" />
      <LineId Id="77" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="62" Count="4" />
      <LineId Id="37" Count="0" />
      <LineId Id="36" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.interpretTransmission">
      <LineId Id="12" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="16" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.maintenance">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.process">
      <LineId Id="190" Count="0" />
      <LineId Id="116" Count="10" />
      <LineId Id="176" Count="1" />
      <LineId Id="127" Count="10" />
      <LineId Id="178" Count="1" />
      <LineId Id="138" Count="11" />
      <LineId Id="180" Count="1" />
      <LineId Id="150" Count="1" />
      <LineId Id="199" Count="0" />
      <LineId Id="198" Count="0" />
      <LineId Id="152" Count="9" />
      <LineId Id="182" Count="1" />
      <LineId Id="162" Count="0" />
      <LineId Id="193" Count="0" />
      <LineId Id="163" Count="11" />
      <LineId Id="184" Count="1" />
      <LineId Id="48" Count="0" />
      <LineId Id="192" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_AbortCondition">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Aborted">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Aborting">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Clearing">
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Complete">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Completing">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Execute">
      <LineId Id="49" Count="5" />
      <LineId Id="48" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Held">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_HoldCondition">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Holding">
      <LineId Id="17" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Idle">
      <LineId Id="13" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Resetting">
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Starting">
      <LineId Id="15" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_StopCondition">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Stopped">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Stopping">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_SuspendCondition">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Suspended">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Suspending">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Unholding">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.ps_Unsuspending">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.receive">
      <LineId Id="147" Count="19" />
      <LineId Id="209" Count="0" />
      <LineId Id="211" Count="3" />
      <LineId Id="230" Count="0" />
      <LineId Id="229" Count="0" />
      <LineId Id="227" Count="0" />
      <LineId Id="215" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="232" Count="0" />
      <LineId Id="231" Count="0" />
      <LineId Id="233" Count="1" />
    </LineIds>
    <LineIds Name="MAIN.runPML">
      <LineId Id="31" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="40" Count="1" />
      <LineId Id="45" Count="0" />
      <LineId Id="47" Count="10" />
      <LineId Id="150" Count="2" />
      <LineId Id="59" Count="2" />
      <LineId Id="63" Count="4" />
      <LineId Id="69" Count="10" />
      <LineId Id="185" Count="0" />
      <LineId Id="168" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="184" Count="0" />
      <LineId Id="82" Count="5" />
      <LineId Id="154" Count="2" />
      <LineId Id="89" Count="1" />
      <LineId Id="157" Count="2" />
      <LineId Id="92" Count="11" />
      <LineId Id="160" Count="2" />
      <LineId Id="166" Count="1" />
      <LineId Id="172" Count="2" />
      <LineId Id="104" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="163" Count="2" />
      <LineId Id="107" Count="1" />
      <LineId Id="175" Count="2" />
      <LineId Id="109" Count="6" />
      <LineId Id="178" Count="2" />
      <LineId Id="117" Count="5" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.shiftBundles">
      <LineId Id="39" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="29" Count="5" />
      <LineId Id="26" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.transfer">
      <LineId Id="17" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="59" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>